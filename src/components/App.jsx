import { Component } from 'react';

import * as API from '../service/API';
// import { Grid } from 'react-loader-spinner';

import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';

//import { nanoid } from 'nanoid';

//import PostsApiService from 'service/API';
// const API_KEY = '38081191-44fc2de709a1cfc57ee790b0d';
// const URl = 'https://pixabay.com/api/';

import SearchBar from './SearchBar/SearchBar';
import ImageGallery from './ImageGallery/ImageGallery';
import Loader from './Loader/Loader';
import Button from './Button/Button';

class ImageApp extends Component {
  state = {
    searchName: '', // –•—Ä–∞–Ω–∏—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
    images: [], // –•—Ä–∞–Ω–∏—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    currentPage: 1, // –•—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â–∏–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    error: null, // –•—Ä–∞–Ω–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    isLoading: false, // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    totalPages: 0, // –•—Ä–∞–Ω–∏—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
  };

  //*** */
  // –ú–µ—Ç–æ–¥ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  componentDidUpdate(_, prevState) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (
      prevState.searchName !== this.state.searchName ||
      prevState.currentPage !== this.state.currentPage
    ) {
      this.addImages(); // –ü–æ–ª—É—á–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ø—É—Ç–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  loadMore = () => {
    this.setState(prevState => ({
      currentPage: prevState.currentPage + 1,
    }));
  };

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –ø–æ–∏—Å–∫–∞
  handleSubmit = query => {
    this.setState({
      searchName: query, // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      images: [], // –û—á–∏—â–∞–µ–º –º–∞—Å—Å–∏–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
      currentPage: 1, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ –ø–µ—Ä–≤—É—é
    });
  };

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  addImages = async () => {
    const { searchName, currentPage } = this.state;
    try {
      this.setState({ isLoading: true }); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏

      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é API –∑–∞–ø—Ä–æ—Å–∞ –∫ Pixabay
      const data = await API.getImages(searchName, currentPage);

      if (data.hits.length === 0) {
        // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        return toast.info('Sorry image not found...', {
          position: toast.POSITION.TOP_RIGHT,
        });
      }

      // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const normalizedImages = API.normalizedImages(data.hits);

      this.setState(state => ({
        images: [...state.images, ...normalizedImages], // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º
        isLoading: false, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
        error: '', // –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        totalPages: Math.ceil(data.totalHits / 12), // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
      }));
    } catch (error) {
      this.setState({ error: 'Something went wrong!' }); // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    } finally {
      this.setState({ isLoading: false }); // –í –ª—é–±–æ–º —Å–ª—É—á–∞–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
    }
  };

  render() {
    const { images, isLoading, currentPage, totalPages } = this.state;

    return (
      <div>
        <ToastContainer />
        <SearchBar onSubmit={this.handleSubmit} />
        {images.length > 0 && <ImageGallery images={images} />}
        {isLoading && <Loader />}
        {images.length > 0 && totalPages !== currentPage && isLoading && (
          <Button onClick={this.loadMore} /> // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        )}

        {/* <header> */}
        {/* <form onSubmit={this.submitQuery}> */}
        {/* <form onSubmit={this.handleSubmit}>
            <button type="submit">
              <span>Search</span>
            </button>

            <input
              name="searchName"
              type="text"
              placeholder="Search images and photos"
              id="search"
              value={this.state.inputValue}
              onChange={this.handleChange}
            />
          </form>
        </header> */}
        {/* {error && <h2>Please, enter search word!</h2>} */}
        {/* <div>
          {isLoading && (
            <Grid
              height="80"
              width="80"
              color="#4fa94d"
              ariaLabel="grid-loading"
              radius="12.5"
              wrapperStyle={{}}
              wrapperClass=""
              visible={true}
            />
          )}
        </div> */}
        {/* <ImageGallery /> */}
        {/* {images.length > 0 ? ( */}
        {/* // <ul>
          //   {images.map(image => ( */}
        {/* //     <li key={image.id}>
          //       <img src={image.webformatURL} alt="" width="300" />
          //     </li>
          //   ))}
          // </ul> */}
        {/* // ) : (
        //   <p */}
        {/* //     style={{
        //       padding: 100,
        //       textAlign: 'center',
        //       fontSize: 30,
        //     }}
        //   >
        //     Image gallery is empty... üì∑
        //   </p>
        // )} */}
        {/* <div>
          {images.length > 0 && totalPages !== currentPage && !isLoading && (
            <button onClick={this.loadMore}>Load more</button>
          )}
        </div> */}
        {/* {this.state.showModal && (
          <div onClick={this.handleBankdropClick}>
            <div onClick={this.openModal}>
              <img src={this.state.images.largeImageURL} alt="" />
            </div>
          </div>
        )} */}
      </div>
    );
  }
}
export default ImageApp;
